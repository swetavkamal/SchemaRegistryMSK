/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package com.swetavk.avro;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class PhoneNumber extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"PhoneNumber\",\"namespace\":\"com.swetavk.avro\",\"fields\":[{\"name\":\"areaCode\",\"type\":\"string\"},{\"name\":\"countryCode\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"prefix\",\"type\":\"string\"},{\"name\":\"number\",\"type\":\"string\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.CharSequence areaCode;
  @Deprecated public java.lang.CharSequence countryCode;
  @Deprecated public java.lang.CharSequence prefix;
  @Deprecated public java.lang.CharSequence number;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public PhoneNumber() {}

  /**
   * All-args constructor.
   */
  public PhoneNumber(java.lang.CharSequence areaCode, java.lang.CharSequence countryCode, java.lang.CharSequence prefix, java.lang.CharSequence number) {
    this.areaCode = areaCode;
    this.countryCode = countryCode;
    this.prefix = prefix;
    this.number = number;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return areaCode;
    case 1: return countryCode;
    case 2: return prefix;
    case 3: return number;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: areaCode = (java.lang.CharSequence)value$; break;
    case 1: countryCode = (java.lang.CharSequence)value$; break;
    case 2: prefix = (java.lang.CharSequence)value$; break;
    case 3: number = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'areaCode' field.
   */
  public java.lang.CharSequence getAreaCode() {
    return areaCode;
  }

  /**
   * Sets the value of the 'areaCode' field.
   * @param value the value to set.
   */
  public void setAreaCode(java.lang.CharSequence value) {
    this.areaCode = value;
  }

  /**
   * Gets the value of the 'countryCode' field.
   */
  public java.lang.CharSequence getCountryCode() {
    return countryCode;
  }

  /**
   * Sets the value of the 'countryCode' field.
   * @param value the value to set.
   */
  public void setCountryCode(java.lang.CharSequence value) {
    this.countryCode = value;
  }

  /**
   * Gets the value of the 'prefix' field.
   */
  public java.lang.CharSequence getPrefix() {
    return prefix;
  }

  /**
   * Sets the value of the 'prefix' field.
   * @param value the value to set.
   */
  public void setPrefix(java.lang.CharSequence value) {
    this.prefix = value;
  }

  /**
   * Gets the value of the 'number' field.
   */
  public java.lang.CharSequence getNumber() {
    return number;
  }

  /**
   * Sets the value of the 'number' field.
   * @param value the value to set.
   */
  public void setNumber(java.lang.CharSequence value) {
    this.number = value;
  }

  /** Creates a new PhoneNumber RecordBuilder */
  public static com.swetavk.avro.PhoneNumber.Builder newBuilder() {
    return new com.swetavk.avro.PhoneNumber.Builder();
  }
  
  /** Creates a new PhoneNumber RecordBuilder by copying an existing Builder */
  public static com.swetavk.avro.PhoneNumber.Builder newBuilder(com.swetavk.avro.PhoneNumber.Builder other) {
    return new com.swetavk.avro.PhoneNumber.Builder(other);
  }
  
  /** Creates a new PhoneNumber RecordBuilder by copying an existing PhoneNumber instance */
  public static com.swetavk.avro.PhoneNumber.Builder newBuilder(com.swetavk.avro.PhoneNumber other) {
    return new com.swetavk.avro.PhoneNumber.Builder(other);
  }
  
  /**
   * RecordBuilder for PhoneNumber instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<PhoneNumber>
    implements org.apache.avro.data.RecordBuilder<PhoneNumber> {

    private java.lang.CharSequence areaCode;
    private java.lang.CharSequence countryCode;
    private java.lang.CharSequence prefix;
    private java.lang.CharSequence number;

    /** Creates a new Builder */
    private Builder() {
      super(com.swetavk.avro.PhoneNumber.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(com.swetavk.avro.PhoneNumber.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.areaCode)) {
        this.areaCode = data().deepCopy(fields()[0].schema(), other.areaCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[1].schema(), other.countryCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.prefix)) {
        this.prefix = data().deepCopy(fields()[2].schema(), other.prefix);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.number)) {
        this.number = data().deepCopy(fields()[3].schema(), other.number);
        fieldSetFlags()[3] = true;
      }
    }
    
    /** Creates a Builder by copying an existing PhoneNumber instance */
    private Builder(com.swetavk.avro.PhoneNumber other) {
            super(com.swetavk.avro.PhoneNumber.SCHEMA$);
      if (isValidValue(fields()[0], other.areaCode)) {
        this.areaCode = data().deepCopy(fields()[0].schema(), other.areaCode);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.countryCode)) {
        this.countryCode = data().deepCopy(fields()[1].schema(), other.countryCode);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.prefix)) {
        this.prefix = data().deepCopy(fields()[2].schema(), other.prefix);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.number)) {
        this.number = data().deepCopy(fields()[3].schema(), other.number);
        fieldSetFlags()[3] = true;
      }
    }

    /** Gets the value of the 'areaCode' field */
    public java.lang.CharSequence getAreaCode() {
      return areaCode;
    }
    
    /** Sets the value of the 'areaCode' field */
    public com.swetavk.avro.PhoneNumber.Builder setAreaCode(java.lang.CharSequence value) {
      validate(fields()[0], value);
      this.areaCode = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'areaCode' field has been set */
    public boolean hasAreaCode() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'areaCode' field */
    public com.swetavk.avro.PhoneNumber.Builder clearAreaCode() {
      areaCode = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'countryCode' field */
    public java.lang.CharSequence getCountryCode() {
      return countryCode;
    }
    
    /** Sets the value of the 'countryCode' field */
    public com.swetavk.avro.PhoneNumber.Builder setCountryCode(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.countryCode = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'countryCode' field has been set */
    public boolean hasCountryCode() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'countryCode' field */
    public com.swetavk.avro.PhoneNumber.Builder clearCountryCode() {
      countryCode = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'prefix' field */
    public java.lang.CharSequence getPrefix() {
      return prefix;
    }
    
    /** Sets the value of the 'prefix' field */
    public com.swetavk.avro.PhoneNumber.Builder setPrefix(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.prefix = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'prefix' field has been set */
    public boolean hasPrefix() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'prefix' field */
    public com.swetavk.avro.PhoneNumber.Builder clearPrefix() {
      prefix = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'number' field */
    public java.lang.CharSequence getNumber() {
      return number;
    }
    
    /** Sets the value of the 'number' field */
    public com.swetavk.avro.PhoneNumber.Builder setNumber(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.number = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'number' field has been set */
    public boolean hasNumber() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'number' field */
    public com.swetavk.avro.PhoneNumber.Builder clearNumber() {
      number = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public PhoneNumber build() {
      try {
        PhoneNumber record = new PhoneNumber();
        record.areaCode = fieldSetFlags()[0] ? this.areaCode : (java.lang.CharSequence) defaultValue(fields()[0]);
        record.countryCode = fieldSetFlags()[1] ? this.countryCode : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.prefix = fieldSetFlags()[2] ? this.prefix : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.number = fieldSetFlags()[3] ? this.number : (java.lang.CharSequence) defaultValue(fields()[3]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
